From 10ecefd9b9279c390fa5fc920a7e993c4d04496c Mon Sep 17 00:00:00 2001
From: wang-bin <wbsecg1@gmail.com>
Date: Sun, 29 Oct 2017 23:35:28 +0800
Subject: [PATCH 04/21] videotoolbox: check runtime availability

fix warnings/errors for new compiler (since xcode9) if targeting
macOS<10.8
---
 libavcodec/videotoolbox.c | 22 +++++++++++++++-------
 1 file changed, 15 insertions(+), 7 deletions(-)

diff --git a/libavcodec/videotoolbox.c b/libavcodec/videotoolbox.c
index fb3501f413..769a28fd0d 100644
--- a/libavcodec/videotoolbox.c
+++ b/libavcodec/videotoolbox.c
@@ -33,6 +33,10 @@
 #include "mpegvideo.h"
 #include <TargetConditionals.h>
 
+#if !__has_builtin(__builtin_available)
+#define __builtin_available(...) (true)
+#endif
+
 #ifndef kVTVideoDecoderSpecification_RequireHardwareAcceleratedVideoDecoder
 #  define kVTVideoDecoderSpecification_RequireHardwareAcceleratedVideoDecoder CFSTR("RequireHardwareAcceleratedVideoDecoder")
 #endif
@@ -620,7 +624,7 @@ static void videotoolbox_decoder_callback(void *opaque,
 
 static OSStatus videotoolbox_session_decode_frame(AVCodecContext *avctx)
 {
-    OSStatus status;
+    OSStatus status = kVTInvalidSessionErr;
     CMSampleBufferRef sample_buf;
     AVVideotoolboxContext *videotoolbox = videotoolbox_get_context(avctx);
     VTContext *vtctx = avctx->internal->hwaccel_priv_data;
@@ -632,13 +636,15 @@ static OSStatus videotoolbox_session_decode_frame(AVCodecContext *avctx)
     if (!sample_buf)
         return -1;
 
-    status = VTDecompressionSessionDecodeFrame(videotoolbox->session,
+    if (__builtin_available(macOS 10.8, iOS 8.0, tvOS 10.2, *)) {
+        status = VTDecompressionSessionDecodeFrame(videotoolbox->session,
                                                sample_buf,
                                                0,       // decodeFlags
                                                NULL,    // sourceFrameRefCon
                                                0);      // infoFlagsOut
-    if (status == noErr)
-        status = VTDecompressionSessionWaitForAsynchronousFrames(videotoolbox->session);
+        if (status == noErr)
+            status = VTDecompressionSessionWaitForAsynchronousFrames(videotoolbox->session);
+    }
 
     CFRelease(sample_buf);
 
@@ -765,7 +771,7 @@ static CFDictionaryRef videotoolbox_decoder_config_create(CMVideoCodecType codec
 static int videotoolbox_start(AVCodecContext *avctx)
 {
     AVVideotoolboxContext *videotoolbox = videotoolbox_get_context(avctx);
-    OSStatus status;
+    OSStatus status = kVTInvalidSessionErr;
     VTDecompressionOutputCallbackRecord decoder_cb;
     CFDictionaryRef decoder_spec;
     CFDictionaryRef buf_attr;
@@ -824,7 +830,8 @@ static int videotoolbox_start(AVCodecContext *avctx)
     decoder_cb.decompressionOutputCallback = videotoolbox_decoder_callback;
     decoder_cb.decompressionOutputRefCon   = avctx;
 
-    status = VTDecompressionSessionCreate(NULL,                      // allocator
+    if (__builtin_available(macOS 10.8, iOS 8.0, tvOS 10.2, *))
+        status = VTDecompressionSessionCreate(NULL,                      // allocator
                                           videotoolbox->cm_fmt_desc, // videoFormatDescription
                                           decoder_spec,              // videoDecoderSpecification
                                           buf_attr,                  // destinationImageBufferAttributes
@@ -872,7 +879,8 @@ static void videotoolbox_stop(AVCodecContext *avctx)
     }
 
     if (videotoolbox->session) {
-        VTDecompressionSessionInvalidate(videotoolbox->session);
+        if (__builtin_available(macOS 10.8, iOS 8.0, tvOS 10.2, *))
+            VTDecompressionSessionInvalidate(videotoolbox->session);
         CFRelease(videotoolbox->session);
         videotoolbox->session = NULL;
     }
-- 
2.20.1 (Apple Git-117)

